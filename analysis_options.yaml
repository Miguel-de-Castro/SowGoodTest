# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:

  rules:
    # Requires you to mention all return types
    always_declare_return_types: true

    # Use parameter order as in json response
    always_put_required_named_parameters_first: false

    # Blindly follow the Flutter code style, which prefers types everywhere
    always_specify_types: true

    # Util classes are awesome!
    avoid_classes_with_only_static_members: false

    # The new tabs vs. spaces. Choose wisely
    prefer_single_quotes: true

    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
